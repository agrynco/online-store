@using OS.Web.Models.ProductViewModels
@model ProductsViewModel

@{
    Layout = "../Shared/_adminListLayout.cshtml";
}

@section createToolBarItem
{
    <li role="presentation">
        @Html.ActionLink("Створити", "Create", new
            {
                categoryId = Model.Filter.Category.Id
            })
    </li>
}

@section filter
{
    @Html.EditorFor(x => x.Filter.Category, "_autocompleteCategorySelector")
}

@section list
{
    @*@{
        string currentControllerName = (string) ViewContext.RouteData.Values[Constants.RouteDataKeys.CONTROLLER];
    }

    @using (Html.BeginForm("Index", currentControllerName, FormMethod.Get))
    {
        
    }*@


    @if (Model.Products.Count > 0)
    {
        @Html.Partial("_pager", Model.Filter)

        <div id="products" class="row list-group">
            @foreach (ProductListItemViewModel product in Model.Products)
            {
                @Html.Partial("_productItem", product)
            }
        </div>

        @Html.Partial("_pager", Model.Filter)
    }
    else
    {
        <div class="alert alert-info">
            Ця категорія не містить категорій
        </div>
        }
}

@section scripts
{
    <script type="text/javascript">
        var enterTheCategoryCallBack = function(categoryId)
        {
            $("#@Html.IdFor(x => x.Filter.Category.Id)").val(categoryId);
            doSearch();
        }
        initAutocompleteCategoriesFilter(enterTheCategoryCallBack);

        function setPublish(sender, productId)
        {
            var currentValue = $(sender).closest("div").hasClass("off");
            $.ajax({
                method: "PUT",
                url: "api/products/" + productId + "/publish/" + !currentValue
            });
        }
    </script>
}
