@using OS.Business.Domain
@using OS.Web.Models.ProductCategoryViewModels
@model ProductCategoriesViewModel

@{
    Layout = "~/Views/Shared/_adminListLayout.cshtml";
}

@section topSection
{
    @{
        string currentControllerName = (string) ViewContext.RouteData.Values[Constants.RouteDataKeys.CONTROLLER];
    }
    @using (Html.BeginForm("Index", currentControllerName, ViewContext.RouteData.Values, FormMethod.Get))
    {
        <table class="full-width">
            <tr>
                <td style="padding-left: 5px">
                    @Html.TextBoxFor(model => model.Filter.Text, "", new
                        {
                            @class = "form-control"
                        })
                    @Html.HiddenFor(model => model.Filter.ParentId)
                </td>
                <td width="1px" style="padding-left: 5px; padding-right: 5px">
                    <input type="submit" value="Шукати" class="btn-primary"/>
                </td>
            </tr>
        </table>
    }

    @if (Model.LevelUpCategories.Count > 0)
    {
        <ul class="breadcrumb">
            @for (int i = 0; i < Model.LevelUpCategories.Count - 1; i++)
            {
                <li>
                    @Html.ActionLink(Model.LevelUpCategories[i].Name, "Index", new ProductCategoriesFilterViewModel
                   {
                       ParentId = Model.LevelUpCategories[i].Id
                   })
                </li>
            }

            <li>
                @Model.LevelUpCategories.Last().Name
            </li>
        </ul>
    }

}

@section creationAction
{
    @Html.ActionLink("Створити", "Create", new
        {
            parentId = Model.Filter.ParentId == null ? (int?) null : Model.Filter.ParentId.Value
        })
}

@section subAtionsToolBar
{
    @if (Model.Filter.ParentId != null)
    {
        <nav class="navbar navbar-link">
            <ul class="nav navbar-nav">
                <li>
                    @Html.ActionLink("Додати новий товар", "CreateProduct", new
                        {
                            categoryId = Model.Filter.ParentId.Value
                        },
                        new
                            {
                            })
                </li>
            </ul>

        </nav>
    }
}

@section content
{
    <style>
        .ui-autocomplete
        {
            max-height: 300px;
            overflow-y: auto;
            /* prevent horizontal scrollbar */
            overflow-x: hidden;
            font-family: monospace;
        }
    </style>

    <ul class="nav-pills">
        @if (Model.Filter.ParentId != null)
        {
            @Html.Partial("_productCategoryItem", new ProductCategory
                {
                    Name = "..",
                    Id = Model.LevelUpProductCategoryId ?? 0
                })
        }

        @foreach (ProductCategory productCategory in Model.ProductCategories)
        {
            @Html.Partial("_productCategoryItem", productCategory)
        }

        @foreach (ProductListItemViewModel productListItemViewModel in Model.ProductsFromLevelUpProductCategory)
        {
            @Html.Partial("_productItem", productListItemViewModel)
        }
    </ul>
}

@section scripts
{
    <script src="~/Scripts/jquery-ui/jquery-ui.js">


    
    </script>

    <script type="text/javascript">
        $("#@Html.IdFor(model => model.Filter.Text)").autocomplete(
        {
            source: "/api/categories/autocomplete",
            minLength: 1,
            create: function()
            {
                $(this).data('ui-autocomplete')._renderItem = function(ul, item)
                {
                    var categories = item.ParentCategories.slice();
                    categories.push(item.Name.replace(this.term, "<b>" + this.term + "</b>"));

                    return $('<li>')
                        .append('<a>' + categories.join(" : ") + '</a>')
                        .appendTo(ul);
                };
            },
            select: function(event, ui)
            {
                location.href = "ProductCategories/Edit/?categoryId=" + ui.item.Id;
            }
        });

    </script>
}
